use strict;
use warnings;
use Test::More;

use Data::Section::Simple 'get_data_section';
use File::Temp;

my $all = get_data_section;
for my $test (keys %$all) {
    # code file, shape file
    my $tmp1 = File::Temp->new;
    my $tmp2 = File::Temp->new;
    my $file1 = $tmp1->filename;
    my $file2 = $tmp2->filename;
    print $tmp1 'print 42';
    print $tmp2 $all->{$test};

    # check if symbolize
    qx($^X -MAcme::HeptaSymbolize=${file2} ${file1});
    my $symbolized = do {
        local $/;
        open my $fh, '<', $file1;
        my $symbolized = <$fh>;
        close $fh;
        $symbolized;
    };
    like($symbolized, qr/^[\'\=\~\(\)\.\^]+$/m, '7 symbols');
    # executed result
    is(qx($^X ${file1}), 42, 'print 42');
    # check shape
    $symbolized =~ s/\S/#/g;
    is($symbolized, $all->{$test}, 'shape');
}

done_testing;

__DATA__

@@ square.txt
########################################
########################################
########################################
########################################
########################################
########################################
########################################
########################################
########################################
########################################
########################################
########################################
########################################
########################################
########################################
@@ triangle.txt
#
##
###
####
#####
######
#######
########
#########
##########
###########
############
#############
##############
###############
################
#################
##################
###################
####################
#####################
######################
#######################
########################
#########################
##########################
###########################
############################
#############################
